<?xml version="1.0" encoding="utf-8"?>
<Peach xmlns="http://peachfuzzer.com/2012/Peach" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://peachfuzzer.com/2012/Peach ../peach.xsd">
	
	<!--
		
		Example of the WindowsDebugger monitor.  This example will launch a 
		program with an attached debugger and log stack traces on faults.  The
		included example program will fault on test 47.
		
		Syntax:
		
			peach samples\Debugger.xml
		
		Output:
		
			You will see the tests scroll along.  Once test 47 has occured you can check
			the c:\peach\logfiles folder for a log of this test that will include a Debugger.txt
			faul output.
			
			NOTE: The crashing test can varry by version of Peach.
		
		Authors:
		
			Michael Eddington (mike@dejavusecurity.com)
		
		$Id$
		
	-->
	
	<!-- Define our file format DDL -->
	<DataModel name="Chunk">
		
		<Number name="Length" size="32" signed="false">
			<Relation type="size" of="Data"/>
		</Number>
		
		<Block name="TypeAndData">
			<String name="Type" length="4" lengthType="bytes"/>
			<Blob name="Data" valueType="hex" length="8" value="00 00 00 00 00 00 00 00"/>
		</Block>
		
		<Number name="CRC" size="32">
			<Fixup class="checksums.Crc32Fixup">
				<Param name="ref" value="TypeAndData"/>
			</Fixup>
		</Number>
		
	</DataModel>
	
	<DataModel name="Png">
		
		<Blob name="pngMagic" valueType="hex" length="8" value="89 50 4E 47 0D 0A 1A 0A"/>
		
		<Block ref="Chunk" minOccurs="1" maxOccurs="1024"/>
		
	</DataModel>
	
	<DataModel name="Param">
		
		<String name="Value" />
		
	</DataModel>
	
	<!-- Define a simple state machine that will write the file and 
		then launch a program using the FileWriter and DebuggerLaucher publishers -->
	<StateModel name="State" initialState="Initial">
		<State name="Initial">
			
			<!-- Write out contents of file.  The publisher attribute matches 
			the name we provide for the publisher in the Test section. -->
			<Action type="output">
				<DataModel ref="Png"/>
				<!--<Data name="data" fileName="sample.png"/>-->
			</Action>
			
			<!-- Close file -->
			<Action type="close" />
			
			<!-- Launch the file consumer -->
			<Action type="call" method="F:\1-github\6-peach\5-third-party\pngcheck-2.3.0-win32\pngcheck.exe">
				<Param name="png file" type="in">
					<DataModel ref="Param"/>
					<Data name="filename">
						<Field name="Value" value="peach.png"/>
					</Data>
				</Param>
			</Action>
			
		</State>
	</StateModel>
	
	<Test name="Default">

		<StateModel ref="State"/>
		
		<!-- Configure our publisher with correct filename to write too -->
		<Publisher class="File">
			<Param name="FileName" value="fuzzfile.png" />
		</Publisher>

		<Strategy class="Sequential"/>
		
		<!-- Configure a logger to store collected information -->
		<Logger class="Filesystem">
			<Param name="Path" value="logtest" />
		</Logger>
	</Test>
	
</Peach>
<!-- end -->
